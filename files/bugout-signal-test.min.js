(()=>{const e=()=>s(window.crypto.getRandomValues(new Uint32Array(10))),t=e=>window.btoa(unescape(encodeURIComponent(e))),n=e=>decodeURIComponent(escape(window.atob(e))),s=e=>Array.prototype.map.call(e,e=>("0"+(255&e).toString(16)).slice(-2)).join(""),i=libsignal.KeyHelper,r=()=>{const e=new libsignal.SignalProtocolStore;if(!window.nkt.signalStore)return(e=>Promise.all([i.generateIdentityKeyPair(),i.generateRegistrationId()]).then(t=>{e.put("identityKey",t[0]),e.put("registrationId",t[1])}))(e).then(()=>Promise.all([((e,t,n)=>Promise.all([e.getIdentityKeyPair(),e.getLocalRegistrationId()]).then(s=>{const r=s[0],a=s[1];return Promise.all([i.generatePreKey(t),i.generateSignedPreKey(r,n)]).then(s=>{const i=s[0],d=s[1];return e.storePreKey(t,i.keyPair),e.storeSignedPreKey(n,d.keyPair),e.put("_signature",d.signature),{identityKey:r.pubKey,registrationId:a,preKey:{keyId:t,publicKey:i.keyPair.pubKey},signedPreKey:{keyId:n,publicKey:d.keyPair.pubKey,signature:d.signature}}})}))(e,1,1),Promise.resolve(e)]))},a=(e,t,s)=>3===s?((e,t)=>{f("DECRYPTING");const s=new libsignal.SignalProtocolAddress(t,1),i=window.nkt.signalStore,r=new libsignal.SessionCipher(i,s);return window.nkt.userList[t].sessionCipher=r,r.decryptPreKeyWhisperMessage(e,"binary").then(e=>Promise.resolve(n(signalUtil.toString(e)))).catch(e=>{f("decryptPreKeyWhisperMessage error"),f(e)})})(e,t):window.nkt.userList[t].sessionCipher?window.nkt.userList[t].sessionCipher.decryptWhisperMessage(e,"binary").then(e=>Promise.resolve(n(signalUtil.toString(e)))).catch(e=>{f("decryptWhisperMessage error"),f(e)}):(f("received non prekey message but got no session yet"),Promise.reject()),d=(e,n)=>{const s=window.nkt.userList[n].sessionCipher;return s?s.encrypt(t(e)):Promise.reject("no session yet")},o=e=>{if(Object(e)===e){const t=e.msgFrom,n=e.msgBugoutPk,s=e.msgBugoutEk;switch(e.msgType){case"newSwarmAddress":window.nkt.userList[t]||w(t,n,s);break;default:window.nkt.userList[t]||w(t,n,s),c(e,"receivedMessages").then(()=>{"bugoutEncrypted"!==e.msgType||e.msgTo!==window.nkt.mySwarm.address()||(e=l(window.nkt.mySwarm,e.msgData))?(e.fromChannel="websocket",S(e)):f("bugout decrypt failed")}).catch(()=>{})}}},w=(e,t,n)=>{e!==window.nkt.mySwarm.address()&&(window.nkt.userList[e]={},window.nkt.mySwarm.peers[e]||(window.nkt.mySwarm.peers[e]={pk:t,ek:n,last:0}),window.dispatchEvent(new CustomEvent("nktnewpeer",{detail:{data:{addr:e}}})))},m=()=>{if(!window.broadcastingSwarmAddr){window.broadcastingSwarmAddr=!1;Object.keys(window.nkt.userList);const e="";u({msgType:"newSwarmAddress",msgFrom:window.nkt.mySwarm.address()+e,msgBugoutPk:window.nkt.mySwarm.pk,msgBugoutEk:window.nkt.mySwarm.ek,msgDate:(new Date).getTime().toString()}),setTimeout(m,5e3)}},g=(e,t)=>{Object(t)===t&&t.msgFrom&&((e,t,n,s)=>{t!==window.nkt.mySwarm.address()&&(window.nkt.userList[t]||(window.nkt.userList[t]={},window.nkt.mySwarm.peers[t]||(window.nkt.mySwarm.peers[t]={pk:n,ek:s,last:0})),window.nkt.userList[t].swarmAddress!==e&&(window.nkt.userList[t].swarmAddress=e,window.dispatchEvent(new CustomEvent("nktnewpeer",{detail:{data:{addr:t}}}))))})(e,t.msgFrom,t.msgBugoutPk,t.msgBugoutEk),c(t,"receivedMessages").then(()=>{t.fromChannel="webrtc","newSwarmAddress"===t.msgType&&(window.nkt.singleSwarmID||window.nkt.userList[t.msgFrom].swarmClient||f("HEARING FROM SOMEONE IM NOT CONNECTED TO WEBRTC"),window.nkt.userList[t.msgFrom].sessionEstablished),S(t)}).catch(()=>{})};function k(e,t){var n={t:(new Date).getTime(),i:e.identifier,pk:e.pk,ek:e.ek,n:nacl.randomBytes(8)};for(var s in t)n[s]=t[s];return pe=bencode.encode(n),bencode.encode({s:nacl.sign.detached(pe,e.keyPair.secretKey),p:pe})}const y=(e,t,n)=>{if(!e.peers[e.address(t)])throw e.address(t)+" not seen - no encryption key.";var s=nacl.randomBytes(nacl.box.nonceLength);return n=bencode.encode({n:s,ek:bs58.encode(Buffer.from(e.keyPairEncrypt.publicKey)),e:nacl.box(n,s,bs58.decode(e.peers[e.address(t)].ek),e.keyPairEncrypt.secretKey)})},l=(e,t)=>{var n=bencode.decode(t);if(n.e&&n.n&&n.ek){var s=n.ek.toString(),i=nacl.box.open(n.e,n.n,bs58.decode(s),e.keyPairEncrypt.secretKey);n=i?bencode.decode(i):null}if(n&&n.p){var r=bencode.decode(n.p),a=r.pk.toString(),d=r.i.toString(),o=nacl.sign.detached.verify(n.p,n.s,bs58.decode(a)),w=d==e.identifier;if(o&&w){s=r.ek.toString();var m=r.v.toString(),g=null;try{g=JSON.parse(m)}catch(e){f("Malformed message JSON: "+m)}if(g)return g}else f("dropping bad packet",o,w,!0)}else f("skipping packet with no payload",n);return{}},u=(t,n,s)=>(Object(t)===t&&(t.uid=t.uid||e()),c(t,"sentMessages").then(()=>{const i=window.nkt.userList;if(n){for(let n in i)if(!(i[n].dontSendTo||i[n].isUnreachable||s&&n!==s))if(i[n].useSignal)d(JSON.stringify(t),n).then(t=>{const s={msgType:"encrypted",msgData:t.body,msgTo:n,msgFrom:window.nkt.mySwarm.address(),msgCipherType:t.type,msgBugoutPk:window.nkt.mySwarm.pk,msgBugoutEk:window.nkt.mySwarm.ek,uid:e()};window.nkt.websocket.emit(window.nkt.websocketEventName,s),i[n].swarmClient&&i[n].swarmClient.send(s),window.nkt.singleSwarmID&&window.nkt.mySwarm.send(s)}).catch(e=>{window.nkt.userList[n].sessionCipher&&(f("error sending encrypted msg"),f(e))});else{const s={msgDate:t.msgDate,msgType:"bugoutEncrypted",msgData:t.msgData,msgTo:n,msgFrom:window.nkt.mySwarm.address(),msgBugoutPk:window.nkt.mySwarm.pk,msgBugoutEk:window.nkt.mySwarm.ek,uid:e()};window.nkt.singleSwarmID&&window.nkt.mySwarm.send(n,s),window.nkt.websocket.emit(window.nkt.websocketEventName,{msgDate:t.msgDate,msgType:"bugoutEncrypted",msgData:y(window.nkt.mySwarm,window.nkt.mySwarm.peers[n].pk,k(window.nkt.mySwarm,{y:"m",v:JSON.stringify(s)})),msgTo:n,msgFrom:window.nkt.mySwarm.address(),msgBugoutPk:window.nkt.mySwarm.pk,msgBugoutEk:window.nkt.mySwarm.ek,uid:s.uid})}}else if(window.nkt.websocket.emit(window.nkt.websocketEventName,t),window.nkt.singleSwarmID)window.nkt.mySwarm.send(t);else for(let e in i)if(!i[e].isUnreachable&&i[e].swarmClient){t.msgTo;try{i[e].swarmClient.send(t)}catch(e){f(e)}}}).catch(e=>{e&&console.error(e)})),c=(e,t)=>Object(e)===e&&-1===window.nkt[t].indexOf(e.uid)||!e.uid?e.uid?(p(e.uid,t),Promise.resolve()):(f(t+" NO UID IN"),f(e),Promise.reject()):Promise.reject(),p=(e,t)=>{window.nkt[t].length>1e3&&window.nkt[t].shift(),window.nkt[t].push(e)},S=e=>{Object(e)===e&&(e.msgFrom&&(window.nkt.userList[e.msgFrom].isUnreachable=!1),e.ping||("webrtc"===e.fromChannel?c(e,"resentMessages").then(()=>{window.nkt.websocket.emit(window.nkt.websocketEventName,e)}).catch(()=>{}):"websocket"===e.fromChannel&&c(e,"resentMessages").then(()=>{window.nkt.mySwarm.send(e)}).catch(()=>{}))),window.dispatchEvent(new CustomEvent("nktincomingdata",{detail:{data:e}}))},b=e=>{window.nkt.userList[e]&&!window.nkt.userList[e].preKey&&(window.nkt.userList[e].preKeyRequestCount=window.nkt.userList[e].preKeyRequestCount||0,window.nkt.userList[e].preKeyRequestCount++,u({msgType:"preKeyRequest",msgFrom:window.nkt.mySwarm.address(),msgBugoutPk:window.nkt.mySwarm.pk,msgBugoutEk:window.nkt.mySwarm.ek,msgForAddr:e,msgTrial:window.nkt.userList[e].preKeyRequestCount}),setTimeout(()=>b(e),5e3))},E=e=>JSON.stringify({identityKey:signalUtil.toString(e.identityKey),registrationId:e.registrationId,preKey:{keyId:e.preKey.keyId,publicKey:signalUtil.toString(e.preKey.publicKey)},signedPreKey:{keyId:e.signedPreKey.keyId,publicKey:signalUtil.toString(e.signedPreKey.publicKey),signature:signalUtil.toString(e.signedPreKey.signature)}}),h=(e,t)=>{const n=(e=>{const t=JSON.parse(e);return{identityKey:signalUtil.toArrayBuffer(t.identityKey),registrationId:t.registrationId,preKey:{keyId:t.preKey.keyId,publicKey:signalUtil.toArrayBuffer(t.preKey.publicKey)},signedPreKey:{keyId:t.signedPreKey.keyId,publicKey:signalUtil.toArrayBuffer(t.signedPreKey.publicKey),signature:signalUtil.toArrayBuffer(t.signedPreKey.signature)}}})(e.detail.data.msgData),s=e.detail.data.msgFrom;if(Object(window.nkt.userList[s])===window.nkt.userList[s]&&(!window.nkt.userList[s].preKey||t)){if(window.nkt.userList[s].waitForPeerToDestroySession)return;window.nkt.userList[s].preKey=n,!t&&s<window.nkt.mySwarm.address()&&L(s)}},T=(e,t)=>{window.dispatchEvent(new CustomEvent("nktsendingmessage",{detail:e}))&&u({msgType:"humanMessage",msgData:e,msgDate:(new Date).getTime().toString(),msgFrom:window.nkt.mySwarm.address(),msgBugoutEk:window.nkt.mySwarm.ek,msgBugoutPk:window.nkt.mySwarm.pk},!0,t)},K=e=>{Object(e)===e&&e.pubKeySrc&&clearInterval(window.nkt.preload),u({msgType:"humanMessage",msgData:e,msgDate:(new Date).getTime().toString(),msgBugoutPk:window.nkt.mySwarm.pk,msgBugoutEk:window.nkt.mySwarm.ek,msgFrom:window.nkt.mySwarm.address()},!1)},L=e=>{window.nkt.userList[e].receivedOrderToEstablish||u({msgType:"sessionEstablishmentOrder",msgData:E(window.nkt.userList[e].myNewPreKeyBundle||window.nkt.preKeyBundle),msgDate:(new Date).getTime().toString(),msgFrom:window.nkt.mySwarm.address(),msgBugoutPk:window.nkt.mySwarm.pk,msgBugoutEk:window.nkt.mySwarm.ek,msgTo:e},!1)},P=()=>{window.addEventListener("nktincomingdata",e=>{if(e.detail.data.msgData&&e.detail.data.msgType&&e.detail.data.msgFrom&&"encrypted"!==e.detail.data.msgType)try{const t=e.detail.data;if("humanMessage"!==t.msgType)return;window.dispatchEvent(new CustomEvent("nktclearmessagereceived",{detail:t.msgData}))}catch(e){}}),window.addEventListener("nktincomingdata",e=>{e.detail.data.msgData&&e.detail.data.msgType&&e.detail.data.msgTo&&e.detail.data.msgFrom&&"encrypted"===e.detail.data.msgType&&e.detail.data.msgTo===window.nkt.mySwarm.address()&&e.detail.data.msgTo!==e.detail.data.msgFrom&&a(e.detail.data.msgData,e.detail.data.msgFrom,e.detail.data.msgCipherType).then(e=>{try{const t=JSON.parse(e);if("humanMessage"!==t.msgType)return;window.dispatchEvent(new CustomEvent("nktencryptedmessagereceived",{detail:t.msgData}))}catch(e){f(e)}}).catch(e=>f(e))}),window.addEventListener("nktincomingdata",e=>{e.detail.data.msgData&&e.detail.data.msgType&&e.detail.data.msgTo&&e.detail.data.msgFrom&&"bugoutEncrypted"===e.detail.data.msgType&&e.detail.data.msgTo===window.nkt.mySwarm.address()&&e.detail.data.msgTo!==e.detail.data.msgFrom&&window.dispatchEvent(new CustomEvent("nktencryptedmessagereceived",{detail:e.detail.data.msgData}))}),window.addEventListener("nktnewpeer",e=>{b(e.detail.data.addr)}),window.addEventListener("nktincomingdata",e=>{if("preKeyRequest"===e.detail.data.msgType){if(!e.detail.data.msgFrom)return;((e,t)=>{f("ANSWERING PREKEY REQUEST"),t===window.nkt.mySwarm.address()?u({msgType:"preKey",msgData:E(window.nkt.userList[e].myNewPreKeyBundle||window.nkt.preKeyBundle),msgDate:(new Date).getTime().toString(),msgFrom:window.nkt.mySwarm.address(),msgBugoutPk:window.nkt.mySwarm.pk,msgBugoutEk:window.nkt.mySwarm.ek,msgTo:e}):Object(window.nkt.userList[t])===window.nkt.userList[t]&&window.nkt.userList[t].preKey})(e.detail.data.msgFrom,e.detail.data.msgForAddr)}}),window.addEventListener("nktincomingdata",e=>{"preKey"===e.detail.data.msgType&&h(e)}),window.addEventListener("nktincomingdata",e=>{if("sessionEstablishment"===e.detail.data.msgType){if(e.detail.data.msgTo!==window.nkt.mySwarm.address())return;if(window.nkt.userList[e.detail.data.msgFrom].receivedOrderToEstablish)return;f("PARSING SESSION ESTABLISHMENT FROM "+e.detail.data.msgFrom),f(e.detail),(e=>{a(e.data.msgData,e.data.msgFrom,e.data.msgCipherType).then(t=>{f("decrypted session establishment :"),f(t),t===window.nkt.mySwarm.address()?(window.nkt.userList[e.data.msgFrom].sessionEstablished=!0,(e=>{u({msgType:"signalEnableOrder",msgDate:(new Date).getTime().toString(),msgFrom:window.nkt.mySwarm.address(),msgBugoutPk:window.nkt.mySwarm.pk,msgBugoutEk:window.nkt.mySwarm.ek,msgTo:e},!1)})(e.data.msgFrom),f("ENABLING SIGNAL FOR "+e.data.msgFrom),window.nkt.userList[e.data.msgFrom].useSignal=!0):(f("BAD SESSION ESTABLISHMENT"),f(e),window.nkt.userList[e.data.msgFrom].receivedOrderToEstablish=!1,((e,t,n)=>Promise.all([e.getIdentityKeyPair(),e.getLocalRegistrationId()]).then(s=>{const r=s[0],a=s[1];return Promise.all([i.generatePreKey(t),e.loadSignedPreKey(n)]).then(s=>{const i=s[0],d=s[1];e.storePreKey(t,i.keyPair);const o=e.get("_signature");return{identityKey:r.pubKey,registrationId:a,preKey:{keyId:t,publicKey:i.keyPair.pubKey},signedPreKey:{keyId:n,publicKey:d.pubKey,signature:o}}})}))(window.nkt.signalStore,1,1).then(t=>{window.nkt.userList[e.data.msgFrom].preKey=null,window.nkt.userList[e.data.msgFrom].myNewPreKeyBundle=t,b(e.data.msgFrom)}))}).catch(e=>{f("CANNOT DECRYPT SESSION ESTABLISHMENT"),f(e)})})(e.detail)}}),window.addEventListener("nktincomingdata",e=>{if("sessionEstablishmentOrder"===e.detail.data.msgType){if(e.detail.data.msgTo!==window.nkt.mySwarm.address())return;f("RECEIVED ORDER TO REESTABLISH"),window.nkt.userList[e.detail.data.msgFrom].receivedOrderToEstablish=!0,h(e,!0),(e=>{if(!window.nkt.userList[e].receivedOrderToEstablish)return;const n=new libsignal.SignalProtocolAddress(e,1),s=new libsignal.SessionBuilder(window.nkt.signalStore,n),i=window.nkt.userList[e].preKey,r=window.nkt.signalStore;f("starting signal session with "+e),window.nkt.userList[e]&&s.processPreKey(i).then((e=>()=>{const n=t(e),s=new libsignal.SignalProtocolAddress(e,1);window.nkt.userList[e].sessionCipher=new libsignal.SessionCipher(r,s),window.nkt.userList[e].sessionCipher.encrypt(n).then(t=>{f("sending establishment"),u({msgType:"sessionEstablishment",msgData:t.body,msgCipherType:t.type,msgDate:(new Date).getTime().toString(),msgFrom:window.nkt.mySwarm.address(),msgBugoutPk:window.nkt.mySwarm.pk,msgBugoutEk:window.nkt.mySwarm.ek,msgTo:e})}).catch(e=>{f("encrypt err"),f(e)})})(e)).catch(e=>{f("ERROR IN startsignalsession"),f(e)})})(e.detail.data.msgFrom)}}),window.addEventListener("nktincomingdata",e=>{if("signalEnableOrder"===e.detail.data.msgType){if(e.detail.data.msgTo!==window.nkt.mySwarm.address())return;f("ENABLING SIGNAL FOR"+e.detail.data.msgFrom),window.nkt.userList[e.detail.data.msgFrom].useSignal=!0}});window.addEventListener("nktincomingdata",e=>{if("sessionDestroyOrder"===e.detail.data.msgType){if(e.detail.data.msgTo!==window.nkt.mySwarm.address())return;(e=>{setTimeout(()=>{window.nkt.userList[e].useSignal||(u({msgType:"sessionDestroyed",msgDate:(new Date).getTime().toString(),msgFrom:window.nkt.mySwarm.address(),msgBugoutPk:window.nkt.mySwarm.pk,msgBugoutEk:window.nkt.mySwarm.ek,msgTo:e},!1),b(e))},1e4)})(e.detail.data.msgFrom)}}),window.addEventListener("nktincomingdata",e=>{"sessionDestroyed"!==e.detail.data.msgType||(e.detail.data.msgTo,window.nkt.mySwarm.address())})},f=e=>{window.nktVerbose&&console.log(e)};window.nkt={},window.nkt.singleSwarmID="nktRYLi0Sn7BEQSPfo3KOiewur1gec",window.nkt.trackers=["wss://hub.bugout.link","wss://tracker.openwebtorrent.com","wss://tracker.btorrent.xyz"],window.nkt.userList={},window.nkt.sentMessages=[],window.nkt.resentMessages=[],window.nkt.receivedMessages=[],window.location.href.indexOf("localhost")>-1?(window.nkt.trackers.push("ws://localhost:8000"),window.nkt.websocket=io("http://localhost:3000"),window.nkt.websocketEventName="nkt",window.nktVerbose=!0):(window.nkt.websocket=io("wss://"+window.location.hostname),window.nkt.websocketEventName="corev2"),window.nkt.mySwarm=(()=>{const e=new Bugout(window.nkt.singleSwarmID,{announce:window.nkt.trackers});return e.on("message",(e,t)=>{g(e,t)}),e.on("seen",e=>{f("RTC SEEN"),f(e),window.dispatchEvent(new CustomEvent("nktwebrtcseen",{detail:e}))}),e.on("left",e=>{f("RTC LEFT"),f(e),window.dispatchEvent(new CustomEvent("nktwebrtcleft",{detail:e}))}),e})(),r().then(e=>{let t=e[0],n=e[1];window.nkt.signalStore=n,window.nkt.preKeyBundle=t,m()}),window.nkt.websocket.on(window.nkt.websocketEventName,o),window.nkt.sendEncryptedMessage=T,window.nkt.sendClearMessage=K,P(),window.nkt.plugin=(()=>(window.nkt.plugins={},e=>{if(Object(e)!==e)throw new Error("plugin is not an object");if(!e.name)throw new Error("plugin.name empty");if(Object(e.listeners)!==e.listeners)throw new Error("plugin.listeners must be an object");window.nkt.plugins[e.name]=e;for(let t in e.listeners)window.addEventListener(t,e.listeners[t])}))(),K({ping:Math.random.toString()})})();